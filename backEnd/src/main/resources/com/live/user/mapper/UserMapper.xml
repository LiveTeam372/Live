<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.live.user.mapper.UserMapper">
	
	<select id="login"  resultType="com.live.user.dto.UserDTO">
		SELECT 
			A.USER_NO userNo, 
			A.EMAIL email, 
			A.GB_CD gbCd, 
			B.GB_NM gbNm,
			A.SOCIAL_YN socialYN, 
			A.SOCIAL_CH socialCH,
			A.UPDATE_DATE updateDate,
			A.USEFLAG_YN useFlagYN,
			C.EMAIL_AUTH_YN emailAuthYN,
			C.CELL_AUTH_YN cellAuthYN,
			C.ADR_AUTH_YN adrAuthYN,
			D.NAME name,
			D.NICKNAME nickName,
			F.PROFILE_IMG profileImg,
			E.AG_NO agNo
		FROM 
			USERINFO A, 
			USER_GUBUN B, 
			USER_AUTH C, 
			USERINFO_DTL D, 
			USERINFO_AG_DTL E,
			USER_PROFILE_IMG F
		WHERE 
			(A.EMAIL = #{email} AND A.pw = #{pw})
			AND
			A.USEFLAG_YN = 'Y'
			AND
			(
				A.GB_CD = B.GB_CD
				AND A.USER_NO = C.USER_NO(+)
				AND A.USER_NO = D.USER_NO(+)
				AND A.USER_NO = E.USER_NO(+)
				AND A.USER_NO = F.USER_NO(+)
			)			
	</select>
	
	<select id="userInfo"  resultType="com.live.user.dto.UserDTO">
		SELECT 
			A.USER_NO userNo, 
			A.EMAIL email, 
			A.GB_CD gbCd, 
			B.GB_NM gbNm,
			A.SOCIAL_YN socialYN, 
			A.SOCIAL_CH socialCH,
			A.UPDATE_DATE updateDate,
			A.USEFLAG_YN useFlagYN,
			C.EMAIL_AUTH_YN emailAuthYN,
			C.CELL_AUTH_YN cellAuthYN,
			C.ADR_AUTH_YN adrAuthYN,
			<choose>
				<!-- 일반 회원 -->
      			<when test="gbCd == 1">
					D.NAME name,
					D.NICKNAME nickName,
					TO_CHAR(D.BIRTH, 'YYYYMMDD') birth,
					D.GENDER_MF genderMF,
					D.CELL_PHONE_1 cellPhone_1,
					D.CELL_PHONE_2 cellPhone_2,
					D.CELL_PHONE_3 cellPhone_3,
					D.ADDRESS address,
					D.ADDRESS_DTL addressDtl,
					D.MARRIED_YN marriedYN,
				</when>
				<!-- 일반 회원 끝-->
				<!-- 사업자 회원-->
				<when test="gbCd == 2">
					E.NAME name,
					E.AG_NO agNo,
					E.CELL_PHONE_1 cellPhone_1,
					E.CELL_PHONE_2 cellPhone_2,
					E.CELL_PHONE_3 cellPhone_3,
					E.ADDRESS address,
					E.ADDRESS_DTL addressDtl,
				</when>
				<!-- 사업자 회원 끝-->
			</choose>
			F.PROFILE_IMG profileImg
		FROM 
			USERINFO A
		    JOIN USER_GUBUN B      ON A.GB_CD = B.GB_CD
		    LEFT JOIN USER_AUTH C  ON A.USER_NO = C.USER_NO
		    <if test="gbCd == 1">
		      LEFT JOIN USERINFO_DTL D ON A.USER_NO = D.USER_NO
		    </if>
		    <if test="gbCd == 2">
		      LEFT JOIN USERINFO_AG_DTL E ON A.USER_NO = E.USER_NO
		    </if>
		    LEFT JOIN USER_PROFILE_IMG F ON A.USER_NO = F.USER_NO
	  	WHERE 
	  		A.USER_NO = #{userNo}
		    AND A.USEFLAG_YN = 'Y'		
	</select>
	
	<select id="getUserInstList" resultType="map">
		SELECT ADDRESS AS "name", TO_CHAR(ADDRESS_ID) AS "code" FROM INTEREST_ADR WHERE USER_NO = #{userNo}
	</select>
	
	<insert id="join" parameterType="com.live.user.dto.UserDTO">
		INSERT INTO USERINFO(USER_NO, EMAIL, PW, GB_CD)
		VALUES (#{dto.userNo}, #{dto.email}, #{dto.pw}, #{dto.gbCd})
	</insert>
	
	<insert id="joinAuth">
		INSERT INTO USER_AUTH(USER_NO)
		VALUES (#{userNo})
	</insert>
	
	<insert id="addProfileImg">
		INSERT INTO USER_PROFILE_IMG(USER_NO)
		VALUES (#{userNo})
	</insert>
	
	<select id="isAvailableEmail">
		SELECT EMAIL FROM USERINFO WHERE EMAIL = #{email}
	</select>
	
	<select id="isAvailableUserNo">
		SELECT USER_NO FROM USERINFO WHERE USER_NO = #{userNo}
	</select>
	
	<select id="countByEmail" resultType="int">
	    SELECT COUNT(*) FROM EMAIL_AUTH WHERE EMAIL = #{email}
	</select>
	
	<insert id="insertAuthNum">
	    INSERT INTO EMAIL_AUTH (EMAIL, AUTH_NUM, CREATED_AT)
	    VALUES (#{email}, #{authNum}, SYSTIMESTAMP)
	</insert>
	
	<update id="updateAuthNum">
	    UPDATE EMAIL_AUTH SET AUTH_NUM = #{authNum}, CREATED_AT = SYSTIMESTAMP
	    WHERE EMAIL = #{email}
	</update>
	
	<select id="findAuthNumByEmail" resultType="string">
	    SELECT AUTH_NUM FROM EMAIL_AUTH
	    WHERE EMAIL = #{email}
	</select>
		
	<update id="authEmail">
		UPDATE USER_AUTH SET EMAIL_AUTH_YN = 'Y'
		WHERE USER_NO = #{userNo}
	</update>
	
	<select id="isAvailableNickName">
		SELECT NICKNAME FROM USERINFO_DTL WHERE NICKNAME = #{nickName}
	</select>
	
	<insert id="userDetalSubmit" parameterType="com.live.user.dto.UserDTO">
		INSERT INTO USERINFO_DTL (
			USER_NO, 
			NAME, 
			NICKNAME, 
			GENDER_MF, 
			BIRTH,
			CELL_PHONE_1, 
			CELL_PHONE_2, 
			CELL_PHONE_3, 
			ADDRESS, 
			ADDRESS_DTL, 
			MARRIED_YN
		) VALUES (
			#{dto.userNo},
			#{dto.name},
			#{dto.nickName},
			#{dto.genderMF},
			#{dto.birth},
			#{dto.cellPhone_1},
			#{dto.cellPhone_2},
			#{dto.cellPhone_3},
			#{dto.address, jdbcType=VARCHAR},
			#{dto.addressDtl, jdbcType=VARCHAR},
			#{dto.marriedYN}		
		)
	</insert>
	
	<insert id="addInterestAdd" parameterType="map">
	  INSERT INTO INTEREST_ADR (
	    USER_NO,
	    ADDRESS,
	    ADDRESS_ID
	  ) VALUES (
	    #{userNo},
	    #{name},
	    #{code}
	  )
	</insert>
	
	<insert id="agentDetalSubmit" parameterType="com.live.user.dto.UserDTO">
		INSERT INTO USERINFO_AG_DTL (
			USER_NO, 
			NAME, 
			AG_NO,
			CELL_PHONE_1, 
			CELL_PHONE_2, 
			CELL_PHONE_3, 
			ADDRESS, 
			ADDRESS_DTL, 
			DESCRIPTION
		) VALUES (
			#{dto.userNo},
			#{dto.name},
			#{dto.agNo},
			#{dto.cellPhone_1},
			#{dto.cellPhone_2},
			#{dto.cellPhone_3},
			#{dto.address, jdbcType=VARCHAR},
			#{dto.addressDtl, jdbcType=VARCHAR},
			#{dto.description, jdbcType=VARCHAR}
		)
	</insert>
	
	<select id="getProfileImgPath" resultType="String">
	  SELECT PROFILE_IMG FROM USER_PROFILE_IMG WHERE USER_NO = #{userNo}
	</select>
	
	<update id="updateUserProfileImg">
		UPDATE USER_PROFILE_IMG SET PROFILE_IMG = #{profileImg} WHERE USER_NO = #{userNo}
	</update>
	
	<update id="userDetailUpdate" parameterType="com.live.user.dto.UserDTO">
		UPDATE USERINFO_DTL SET 
			NICKNAME = #{dto.nickName}, 
			GENDER_MF = #{dto.genderMF}, 
			BIRTH = #{dto.birth},
			CELL_PHONE_1 = #{dto.cellPhone_1}, 
			CELL_PHONE_2 = #{dto.cellPhone_2}, 
			CELL_PHONE_3 = #{dto.cellPhone_3}, 
			ADDRESS = #{dto.address, jdbcType=VARCHAR}, 
			ADDRESS_DTL = #{dto.addressDtl, jdbcType=VARCHAR}, 
			MARRIED_YN = #{dto.marriedYN}
		WHERE
			USER_NO = #{dto.userNo}
	</update>
	
	<update id="agentDetailUpdate" parameterType="com.live.user.dto.UserDTO">
		UPDATE USERINFO_AG_DTL 
			NAME = #{dto.name}, 
			AG_NO = #{dto.agNo},
			CELL_PHONE_1 = #{dto.cellPhone_1}, 
			CELL_PHONE_2 = #{dto.cellPhone_2}, 
			CELL_PHONE_3 = #{dto.cellPhone_3}, 
			ADDRESS = #{dto.address, jdbcType=VARCHAR}, 
			ADDRESS_DTL = #{dto.addressDtl, jdbcType=VARCHAR}, 
			DESCRIPTION = #{dto.description, jdbcType=VARCHAR}
		WHERE
			USER_NO = #{dto.userNo}
	</update>
	
	<delete id="deleteInstAdr">
		DELETE FROM INTEREST_ADR WHERE USER_NO = #{userNo}
	</delete>
	
</mapper>